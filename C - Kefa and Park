#include <bits/stdc++.h>
#define ll            long long
#define pb            push_back
#define ld            long double
#define sz            size()
#define foo(i,a,b)    for (ll i=a;i<b;i++)
#define pll           pair<ll,ll>
#define ed            "\n"
#define ct            cout
#define m_p           make_pair
#define vi            vector<ll>
#define vpll          vector<pll>
#define ff            first
#define ss            second
#define all(x)        x.begin(),x.end()
#define pqmax         priority_queue<ll>
#define pqmin         priority_queue<ll,vector<ll>,greater<ll>>
#define modulo        1000000007


using namespace std;

void bahut_tezz()
{
	#ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
		freopen("output.txt", "w", stdout);
	#endif
	std::ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
}
/*--------------------------------------------------------------------------------------------------------------------------*/

void dfs(vector<ll> adj[],map<ll,ll>& cat,vector<ll>& continuous_cats,vector<ll>& leaf,ll curr,ll par,ll preValue,ll curMax)
{
	if(cat[curr] == 0)
	{
		preValue = 0;
	}
	else
	{
		preValue++;
	}
	curMax = max(curMax,preValue);
	continuous_cats[curr] = curMax;
	leaf[curr] = 1;
	for(auto it:adj[curr])
	{
		if(it == par) continue;
		dfs(adj,cat,continuous_cats,leaf,it,curr,preValue,curMax);
		leaf[curr] += (leaf[it] + 1);
	}
}

void jai_bajrangbali()
{
	ll n,m;
	cin>>n>>m;
	ll a[n];
	map<ll,ll> cat;
	foo(i,0,n)
	{
		cin>>a[i];
		if(a[i] == 1)
		{
			cat[i+1]++;
		}
	}
	vector<ll> adj[n+1];
	foo(i,0,n-1)
	{
		ll x,y;
		cin>>x>>y;
		adj[x].pb(y);
		adj[y].pb(x);
	}
	vi continuous_cats(n+1,0);
	vi leaf(n+1,0);
	dfs(adj,cat,continuous_cats,leaf,1,0,0,0);
	ll ans = 0;
	for(ll i=1;i<=n;i++)
	{
		if(leaf[i] == 1 && continuous_cats[i] <= m)
		{
			ans++;
		}
	}
	ct<<ans<<ed;	
	


}

int main()
{
	bahut_tezz();
	long long t=1;
	//cin>>t;
	while(t--)jai_bajrangbali();

	return 0;
}
